#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CWC_FurnitureSystem
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CWC")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    partial void InsertpurchaseItem(purchaseItem instance);
    partial void UpdatepurchaseItem(purchaseItem instance);
    partial void DeletepurchaseItem(purchaseItem instance);
    partial void InsertpurchaseOrder(purchaseOrder instance);
    partial void UpdatepurchaseOrder(purchaseOrder instance);
    partial void DeletepurchaseOrder(purchaseOrder instance);
    partial void InsertreturnInward(returnInward instance);
    partial void UpdatereturnInward(returnInward instance);
    partial void DeletereturnInward(returnInward instance);
    partial void Insertsupplier(supplier instance);
    partial void Updatesupplier(supplier instance);
    partial void Deletesupplier(supplier instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertdelivery(delivery instance);
    partial void Updatedelivery(delivery instance);
    partial void Deletedelivery(delivery instance);
    partial void InsertdeliverySchedule(deliverySchedule instance);
    partial void UpdatedeliverySchedule(deliverySchedule instance);
    partial void DeletedeliverySchedule(deliverySchedule instance);
    partial void Insertfeedback(feedback instance);
    partial void Updatefeedback(feedback instance);
    partial void Deletefeedback(feedback instance);
    partial void Insertpayment(payment instance);
    partial void Updatepayment(payment instance);
    partial void Deletepayment(payment instance);
    partial void InsertsalesItem(salesItem instance);
    partial void UpdatesalesItem(salesItem instance);
    partial void DeletesalesItem(salesItem instance);
    partial void InsertsalesOrder(salesOrder instance);
    partial void UpdatesalesOrder(salesOrder instance);
    partial void DeletesalesOrder(salesOrder instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CWCConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
		
		public System.Data.Linq.Table<purchaseItem> purchaseItems
		{
			get
			{
				return this.GetTable<purchaseItem>();
			}
		}
		
		public System.Data.Linq.Table<purchaseOrder> purchaseOrders
		{
			get
			{
				return this.GetTable<purchaseOrder>();
			}
		}
		
		public System.Data.Linq.Table<returnInward> returnInwards
		{
			get
			{
				return this.GetTable<returnInward>();
			}
		}
		
		public System.Data.Linq.Table<supplier> suppliers
		{
			get
			{
				return this.GetTable<supplier>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<delivery> deliveries
		{
			get
			{
				return this.GetTable<delivery>();
			}
		}
		
		public System.Data.Linq.Table<deliverySchedule> deliverySchedules
		{
			get
			{
				return this.GetTable<deliverySchedule>();
			}
		}
		
		public System.Data.Linq.Table<feedback> feedbacks
		{
			get
			{
				return this.GetTable<feedback>();
			}
		}
		
		public System.Data.Linq.Table<payment> payments
		{
			get
			{
				return this.GetTable<payment>();
			}
		}
		
		public System.Data.Linq.Table<salesItem> salesItems
		{
			get
			{
				return this.GetTable<salesItem>();
			}
		}
		
		public System.Data.Linq.Table<salesOrder> salesOrders
		{
			get
			{
				return this.GetTable<salesOrder>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productId;
		
		private string _productName;
		
		private string _description;
		
		private int _qtyOnHand;
		
		private decimal _sellingPrice;
		
		private decimal _purchasePrice;
		
		private string _category;
		
		private int _warranty;
		
		private string _productStatus;
		
		private string _url;
		
		private EntitySet<purchaseItem> _purchaseItems;
		
		private EntitySet<returnInward> _returnInwards;
		
		private EntitySet<salesItem> _salesItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnproductNameChanging(string value);
    partial void OnproductNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnqtyOnHandChanging(int value);
    partial void OnqtyOnHandChanged();
    partial void OnsellingPriceChanging(decimal value);
    partial void OnsellingPriceChanged();
    partial void OnpurchasePriceChanging(decimal value);
    partial void OnpurchasePriceChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    partial void OnwarrantyChanging(int value);
    partial void OnwarrantyChanged();
    partial void OnproductStatusChanging(string value);
    partial void OnproductStatusChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    #endregion
		
		public product()
		{
			this._purchaseItems = new EntitySet<purchaseItem>(new Action<purchaseItem>(this.attach_purchaseItems), new Action<purchaseItem>(this.detach_purchaseItems));
			this._returnInwards = new EntitySet<returnInward>(new Action<returnInward>(this.attach_returnInwards), new Action<returnInward>(this.detach_returnInwards));
			this._salesItems = new EntitySet<salesItem>(new Action<salesItem>(this.attach_salesItems), new Action<salesItem>(this.detach_salesItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string productName
		{
			get
			{
				return this._productName;
			}
			set
			{
				if ((this._productName != value))
				{
					this.OnproductNameChanging(value);
					this.SendPropertyChanging();
					this._productName = value;
					this.SendPropertyChanged("productName");
					this.OnproductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qtyOnHand", DbType="Int NOT NULL")]
		public int qtyOnHand
		{
			get
			{
				return this._qtyOnHand;
			}
			set
			{
				if ((this._qtyOnHand != value))
				{
					this.OnqtyOnHandChanging(value);
					this.SendPropertyChanging();
					this._qtyOnHand = value;
					this.SendPropertyChanged("qtyOnHand");
					this.OnqtyOnHandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sellingPrice", DbType="Money NOT NULL")]
		public decimal sellingPrice
		{
			get
			{
				return this._sellingPrice;
			}
			set
			{
				if ((this._sellingPrice != value))
				{
					this.OnsellingPriceChanging(value);
					this.SendPropertyChanging();
					this._sellingPrice = value;
					this.SendPropertyChanged("sellingPrice");
					this.OnsellingPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchasePrice", DbType="Money NOT NULL")]
		public decimal purchasePrice
		{
			get
			{
				return this._purchasePrice;
			}
			set
			{
				if ((this._purchasePrice != value))
				{
					this.OnpurchasePriceChanging(value);
					this.SendPropertyChanging();
					this._purchasePrice = value;
					this.SendPropertyChanged("purchasePrice");
					this.OnpurchasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="NVarChar(50)")]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warranty", DbType="Int NOT NULL")]
		public int warranty
		{
			get
			{
				return this._warranty;
			}
			set
			{
				if ((this._warranty != value))
				{
					this.OnwarrantyChanging(value);
					this.SendPropertyChanging();
					this._warranty = value;
					this.SendPropertyChanged("warranty");
					this.OnwarrantyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string productStatus
		{
			get
			{
				return this._productStatus;
			}
			set
			{
				if ((this._productStatus != value))
				{
					this.OnproductStatusChanging(value);
					this.SendPropertyChanging();
					this._productStatus = value;
					this.SendPropertyChanged("productStatus");
					this.OnproductStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_purchaseItem", Storage="_purchaseItems", ThisKey="productId", OtherKey="productId")]
		public EntitySet<purchaseItem> purchaseItems
		{
			get
			{
				return this._purchaseItems;
			}
			set
			{
				this._purchaseItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_returnInward", Storage="_returnInwards", ThisKey="productId", OtherKey="productId")]
		public EntitySet<returnInward> returnInwards
		{
			get
			{
				return this._returnInwards;
			}
			set
			{
				this._returnInwards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_salesItem", Storage="_salesItems", ThisKey="productId", OtherKey="productId")]
		public EntitySet<salesItem> salesItems
		{
			get
			{
				return this._salesItems;
			}
			set
			{
				this._salesItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_purchaseItems(purchaseItem entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_purchaseItems(purchaseItem entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
		
		private void attach_returnInwards(returnInward entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_returnInwards(returnInward entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
		
		private void attach_salesItems(salesItem entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_salesItems(salesItem entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.purchaseItem")]
	public partial class purchaseItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _purchaseId;
		
		private int _productId;
		
		private int _quantity;
		
		private decimal _unitPurchasePrice;
		
		private decimal _totalPurchasePrice;
		
		private EntityRef<product> _product;
		
		private EntityRef<purchaseOrder> _purchaseOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpurchaseIdChanging(int value);
    partial void OnpurchaseIdChanged();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnunitPurchasePriceChanging(decimal value);
    partial void OnunitPurchasePriceChanged();
    partial void OntotalPurchasePriceChanging(decimal value);
    partial void OntotalPurchasePriceChanged();
    #endregion
		
		public purchaseItem()
		{
			this._product = default(EntityRef<product>);
			this._purchaseOrder = default(EntityRef<purchaseOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchaseId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int purchaseId
		{
			get
			{
				return this._purchaseId;
			}
			set
			{
				if ((this._purchaseId != value))
				{
					if (this._purchaseOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpurchaseIdChanging(value);
					this.SendPropertyChanging();
					this._purchaseId = value;
					this.SendPropertyChanged("purchaseId");
					this.OnpurchaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitPurchasePrice", DbType="Money NOT NULL")]
		public decimal unitPurchasePrice
		{
			get
			{
				return this._unitPurchasePrice;
			}
			set
			{
				if ((this._unitPurchasePrice != value))
				{
					this.OnunitPurchasePriceChanging(value);
					this.SendPropertyChanging();
					this._unitPurchasePrice = value;
					this.SendPropertyChanged("unitPurchasePrice");
					this.OnunitPurchasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalPurchasePrice", DbType="Money NOT NULL")]
		public decimal totalPurchasePrice
		{
			get
			{
				return this._totalPurchasePrice;
			}
			set
			{
				if ((this._totalPurchasePrice != value))
				{
					this.OntotalPurchasePriceChanging(value);
					this.SendPropertyChanging();
					this._totalPurchasePrice = value;
					this.SendPropertyChanged("totalPurchasePrice");
					this.OntotalPurchasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_purchaseItem", Storage="_product", ThisKey="productId", OtherKey="productId", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.purchaseItems.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.purchaseItems.Add(this);
						this._productId = value.productId;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="purchaseOrder_purchaseItem", Storage="_purchaseOrder", ThisKey="purchaseId", OtherKey="purchaseId", IsForeignKey=true)]
		public purchaseOrder purchaseOrder
		{
			get
			{
				return this._purchaseOrder.Entity;
			}
			set
			{
				purchaseOrder previousValue = this._purchaseOrder.Entity;
				if (((previousValue != value) 
							|| (this._purchaseOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._purchaseOrder.Entity = null;
						previousValue.purchaseItems.Remove(this);
					}
					this._purchaseOrder.Entity = value;
					if ((value != null))
					{
						value.purchaseItems.Add(this);
						this._purchaseId = value.purchaseId;
					}
					else
					{
						this._purchaseId = default(int);
					}
					this.SendPropertyChanged("purchaseOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.purchaseOrder")]
	public partial class purchaseOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _purchaseId;
		
		private System.DateTime _purchaseDate;
		
		private decimal _totalAmount;
		
		private string _purchaseStatus;
		
		private int _supplier;
		
		private EntitySet<purchaseItem> _purchaseItems;
		
		private EntityRef<supplier> _supplier1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpurchaseIdChanging(int value);
    partial void OnpurchaseIdChanged();
    partial void OnpurchaseDateChanging(System.DateTime value);
    partial void OnpurchaseDateChanged();
    partial void OntotalAmountChanging(decimal value);
    partial void OntotalAmountChanged();
    partial void OnpurchaseStatusChanging(string value);
    partial void OnpurchaseStatusChanged();
    partial void OnsupplierChanging(int value);
    partial void OnsupplierChanged();
    #endregion
		
		public purchaseOrder()
		{
			this._purchaseItems = new EntitySet<purchaseItem>(new Action<purchaseItem>(this.attach_purchaseItems), new Action<purchaseItem>(this.detach_purchaseItems));
			this._supplier1 = default(EntityRef<supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchaseId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int purchaseId
		{
			get
			{
				return this._purchaseId;
			}
			set
			{
				if ((this._purchaseId != value))
				{
					this.OnpurchaseIdChanging(value);
					this.SendPropertyChanging();
					this._purchaseId = value;
					this.SendPropertyChanged("purchaseId");
					this.OnpurchaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchaseDate", DbType="DateTime NOT NULL")]
		public System.DateTime purchaseDate
		{
			get
			{
				return this._purchaseDate;
			}
			set
			{
				if ((this._purchaseDate != value))
				{
					this.OnpurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._purchaseDate = value;
					this.SendPropertyChanged("purchaseDate");
					this.OnpurchaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalAmount", DbType="Money NOT NULL")]
		public decimal totalAmount
		{
			get
			{
				return this._totalAmount;
			}
			set
			{
				if ((this._totalAmount != value))
				{
					this.OntotalAmountChanging(value);
					this.SendPropertyChanging();
					this._totalAmount = value;
					this.SendPropertyChanged("totalAmount");
					this.OntotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchaseStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string purchaseStatus
		{
			get
			{
				return this._purchaseStatus;
			}
			set
			{
				if ((this._purchaseStatus != value))
				{
					this.OnpurchaseStatusChanging(value);
					this.SendPropertyChanging();
					this._purchaseStatus = value;
					this.SendPropertyChanged("purchaseStatus");
					this.OnpurchaseStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier", DbType="Int NOT NULL")]
		public int supplier
		{
			get
			{
				return this._supplier;
			}
			set
			{
				if ((this._supplier != value))
				{
					if (this._supplier1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsupplierChanging(value);
					this.SendPropertyChanging();
					this._supplier = value;
					this.SendPropertyChanged("supplier");
					this.OnsupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="purchaseOrder_purchaseItem", Storage="_purchaseItems", ThisKey="purchaseId", OtherKey="purchaseId")]
		public EntitySet<purchaseItem> purchaseItems
		{
			get
			{
				return this._purchaseItems;
			}
			set
			{
				this._purchaseItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_purchaseOrder", Storage="_supplier1", ThisKey="supplier", OtherKey="supplierId", IsForeignKey=true)]
		public supplier supplier1
		{
			get
			{
				return this._supplier1.Entity;
			}
			set
			{
				supplier previousValue = this._supplier1.Entity;
				if (((previousValue != value) 
							|| (this._supplier1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplier1.Entity = null;
						previousValue.purchaseOrders.Remove(this);
					}
					this._supplier1.Entity = value;
					if ((value != null))
					{
						value.purchaseOrders.Add(this);
						this._supplier = value.supplierId;
					}
					else
					{
						this._supplier = default(int);
					}
					this.SendPropertyChanged("supplier1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_purchaseItems(purchaseItem entity)
		{
			this.SendPropertyChanging();
			entity.purchaseOrder = this;
		}
		
		private void detach_purchaseItems(purchaseItem entity)
		{
			this.SendPropertyChanging();
			entity.purchaseOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.returnInward")]
	public partial class returnInward : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _returnId;
		
		private System.DateTime _returnDate;
		
		private string _description;
		
		private string _returnStatus;
		
		private System.Guid _staff;
		
		private int _salesId;
		
		private int _productId;
		
		private EntityRef<product> _product;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<salesOrder> _salesOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnreturnIdChanging(int value);
    partial void OnreturnIdChanged();
    partial void OnreturnDateChanging(System.DateTime value);
    partial void OnreturnDateChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnreturnStatusChanging(string value);
    partial void OnreturnStatusChanged();
    partial void OnstaffChanging(System.Guid value);
    partial void OnstaffChanged();
    partial void OnsalesIdChanging(int value);
    partial void OnsalesIdChanged();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    #endregion
		
		public returnInward()
		{
			this._product = default(EntityRef<product>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._salesOrder = default(EntityRef<salesOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returnId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int returnId
		{
			get
			{
				return this._returnId;
			}
			set
			{
				if ((this._returnId != value))
				{
					this.OnreturnIdChanging(value);
					this.SendPropertyChanging();
					this._returnId = value;
					this.SendPropertyChanged("returnId");
					this.OnreturnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returnDate", DbType="DateTime NOT NULL")]
		public System.DateTime returnDate
		{
			get
			{
				return this._returnDate;
			}
			set
			{
				if ((this._returnDate != value))
				{
					this.OnreturnDateChanging(value);
					this.SendPropertyChanging();
					this._returnDate = value;
					this.SendPropertyChanged("returnDate");
					this.OnreturnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returnStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string returnStatus
		{
			get
			{
				return this._returnStatus;
			}
			set
			{
				if ((this._returnStatus != value))
				{
					this.OnreturnStatusChanging(value);
					this.SendPropertyChanging();
					this._returnStatus = value;
					this.SendPropertyChanged("returnStatus");
					this.OnreturnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid staff
		{
			get
			{
				return this._staff;
			}
			set
			{
				if ((this._staff != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstaffChanging(value);
					this.SendPropertyChanging();
					this._staff = value;
					this.SendPropertyChanged("staff");
					this.OnstaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salesId", DbType="Int NOT NULL")]
		public int salesId
		{
			get
			{
				return this._salesId;
			}
			set
			{
				if ((this._salesId != value))
				{
					if (this._salesOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsalesIdChanging(value);
					this.SendPropertyChanging();
					this._salesId = value;
					this.SendPropertyChanged("salesId");
					this.OnsalesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL")]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_returnInward", Storage="_product", ThisKey="productId", OtherKey="productId", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.returnInwards.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.returnInwards.Add(this);
						this._productId = value.productId;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_returnInward", Storage="_aspnet_User", ThisKey="staff", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.returnInwards.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.returnInwards.Add(this);
						this._staff = value.UserId;
					}
					else
					{
						this._staff = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="salesOrder_returnInward", Storage="_salesOrder", ThisKey="salesId", OtherKey="salesId", IsForeignKey=true)]
		public salesOrder salesOrder
		{
			get
			{
				return this._salesOrder.Entity;
			}
			set
			{
				salesOrder previousValue = this._salesOrder.Entity;
				if (((previousValue != value) 
							|| (this._salesOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._salesOrder.Entity = null;
						previousValue.returnInwards.Remove(this);
					}
					this._salesOrder.Entity = value;
					if ((value != null))
					{
						value.returnInwards.Add(this);
						this._salesId = value.salesId;
					}
					else
					{
						this._salesId = default(int);
					}
					this.SendPropertyChanged("salesOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.supplier")]
	public partial class supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _supplierId;
		
		private string _supplierName;
		
		private string _address;
		
		private string _contactNo;
		
		private string _email;
		
		private string _supplierStatus;
		
		private string _companyName;
		
		private EntitySet<purchaseOrder> _purchaseOrders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsupplierIdChanging(int value);
    partial void OnsupplierIdChanged();
    partial void OnsupplierNameChanging(string value);
    partial void OnsupplierNameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncontactNoChanging(string value);
    partial void OncontactNoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnsupplierStatusChanging(string value);
    partial void OnsupplierStatusChanged();
    partial void OncompanyNameChanging(string value);
    partial void OncompanyNameChanged();
    #endregion
		
		public supplier()
		{
			this._purchaseOrders = new EntitySet<purchaseOrder>(new Action<purchaseOrder>(this.attach_purchaseOrders), new Action<purchaseOrder>(this.detach_purchaseOrders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplierId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int supplierId
		{
			get
			{
				return this._supplierId;
			}
			set
			{
				if ((this._supplierId != value))
				{
					this.OnsupplierIdChanging(value);
					this.SendPropertyChanging();
					this._supplierId = value;
					this.SendPropertyChanged("supplierId");
					this.OnsupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplierName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string supplierName
		{
			get
			{
				return this._supplierName;
			}
			set
			{
				if ((this._supplierName != value))
				{
					this.OnsupplierNameChanging(value);
					this.SendPropertyChanging();
					this._supplierName = value;
					this.SendPropertyChanged("supplierName");
					this.OnsupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(MAX)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactNo", DbType="NVarChar(50)")]
		public string contactNo
		{
			get
			{
				return this._contactNo;
			}
			set
			{
				if ((this._contactNo != value))
				{
					this.OncontactNoChanging(value);
					this.SendPropertyChanging();
					this._contactNo = value;
					this.SendPropertyChanged("contactNo");
					this.OncontactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplierStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string supplierStatus
		{
			get
			{
				return this._supplierStatus;
			}
			set
			{
				if ((this._supplierStatus != value))
				{
					this.OnsupplierStatusChanging(value);
					this.SendPropertyChanging();
					this._supplierStatus = value;
					this.SendPropertyChanged("supplierStatus");
					this.OnsupplierStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyName", DbType="NVarChar(50)")]
		public string companyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this.OncompanyNameChanging(value);
					this.SendPropertyChanging();
					this._companyName = value;
					this.SendPropertyChanged("companyName");
					this.OncompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_purchaseOrder", Storage="_purchaseOrders", ThisKey="supplierId", OtherKey="supplier")]
		public EntitySet<purchaseOrder> purchaseOrders
		{
			get
			{
				return this._purchaseOrders;
			}
			set
			{
				this._purchaseOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_purchaseOrders(purchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.supplier1 = this;
		}
		
		private void detach_purchaseOrders(purchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.supplier1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private string _status;
		
		private EntitySet<returnInward> _returnInwards;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<deliverySchedule> _deliverySchedules;
		
		private EntitySet<feedback> _feedbacks;
		
		private EntitySet<feedback> _feedbacks1;
		
		private EntitySet<salesOrder> _salesOrders;
		
		private EntitySet<salesOrder> _salesOrders1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public aspnet_User()
		{
			this._returnInwards = new EntitySet<returnInward>(new Action<returnInward>(this.attach_returnInwards), new Action<returnInward>(this.detach_returnInwards));
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._deliverySchedules = new EntitySet<deliverySchedule>(new Action<deliverySchedule>(this.attach_deliverySchedules), new Action<deliverySchedule>(this.detach_deliverySchedules));
			this._feedbacks = new EntitySet<feedback>(new Action<feedback>(this.attach_feedbacks), new Action<feedback>(this.detach_feedbacks));
			this._feedbacks1 = new EntitySet<feedback>(new Action<feedback>(this.attach_feedbacks1), new Action<feedback>(this.detach_feedbacks1));
			this._salesOrders = new EntitySet<salesOrder>(new Action<salesOrder>(this.attach_salesOrders), new Action<salesOrder>(this.detach_salesOrders));
			this._salesOrders1 = new EntitySet<salesOrder>(new Action<salesOrder>(this.attach_salesOrders1), new Action<salesOrder>(this.detach_salesOrders1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_returnInward", Storage="_returnInwards", ThisKey="UserId", OtherKey="staff")]
		public EntitySet<returnInward> returnInwards
		{
			get
			{
				return this._returnInwards;
			}
			set
			{
				this._returnInwards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_deliverySchedule", Storage="_deliverySchedules", ThisKey="UserId", OtherKey="driverId")]
		public EntitySet<deliverySchedule> deliverySchedules
		{
			get
			{
				return this._deliverySchedules;
			}
			set
			{
				this._deliverySchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_feedback", Storage="_feedbacks", ThisKey="UserId", OtherKey="customer")]
		public EntitySet<feedback> feedbacks
		{
			get
			{
				return this._feedbacks;
			}
			set
			{
				this._feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_feedback1", Storage="_feedbacks1", ThisKey="UserId", OtherKey="manager")]
		public EntitySet<feedback> feedbacks1
		{
			get
			{
				return this._feedbacks1;
			}
			set
			{
				this._feedbacks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_salesOrder", Storage="_salesOrders", ThisKey="UserId", OtherKey="customer")]
		public EntitySet<salesOrder> salesOrders
		{
			get
			{
				return this._salesOrders;
			}
			set
			{
				this._salesOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_salesOrder1", Storage="_salesOrders1", ThisKey="UserId", OtherKey="staff")]
		public EntitySet<salesOrder> salesOrders1
		{
			get
			{
				return this._salesOrders1;
			}
			set
			{
				this._salesOrders1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_returnInwards(returnInward entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_returnInwards(returnInward entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_deliverySchedules(deliverySchedule entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_deliverySchedules(deliverySchedule entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_feedbacks(feedback entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_feedbacks(feedback entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_feedbacks1(feedback entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User1 = this;
		}
		
		private void detach_feedbacks1(feedback entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User1 = null;
		}
		
		private void attach_salesOrders(salesOrder entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_salesOrders(salesOrder entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_salesOrders1(salesOrder entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User1 = this;
		}
		
		private void detach_salesOrders1(salesOrder entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.delivery")]
	public partial class delivery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _deliveryId;
		
		private string _description;
		
		private string _deliveryAddress;
		
		private string _deliveryStatus;
		
		private int _salesId;
		
		private EntitySet<deliverySchedule> _deliverySchedules;
		
		private EntityRef<salesOrder> _salesOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndeliveryIdChanging(int value);
    partial void OndeliveryIdChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndeliveryAddressChanging(string value);
    partial void OndeliveryAddressChanged();
    partial void OndeliveryStatusChanging(string value);
    partial void OndeliveryStatusChanged();
    partial void OnsalesIdChanging(int value);
    partial void OnsalesIdChanged();
    #endregion
		
		public delivery()
		{
			this._deliverySchedules = new EntitySet<deliverySchedule>(new Action<deliverySchedule>(this.attach_deliverySchedules), new Action<deliverySchedule>(this.detach_deliverySchedules));
			this._salesOrder = default(EntityRef<salesOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deliveryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int deliveryId
		{
			get
			{
				return this._deliveryId;
			}
			set
			{
				if ((this._deliveryId != value))
				{
					this.OndeliveryIdChanging(value);
					this.SendPropertyChanging();
					this._deliveryId = value;
					this.SendPropertyChanged("deliveryId");
					this.OndeliveryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deliveryAddress", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string deliveryAddress
		{
			get
			{
				return this._deliveryAddress;
			}
			set
			{
				if ((this._deliveryAddress != value))
				{
					this.OndeliveryAddressChanging(value);
					this.SendPropertyChanging();
					this._deliveryAddress = value;
					this.SendPropertyChanged("deliveryAddress");
					this.OndeliveryAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deliveryStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string deliveryStatus
		{
			get
			{
				return this._deliveryStatus;
			}
			set
			{
				if ((this._deliveryStatus != value))
				{
					this.OndeliveryStatusChanging(value);
					this.SendPropertyChanging();
					this._deliveryStatus = value;
					this.SendPropertyChanged("deliveryStatus");
					this.OndeliveryStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salesId", DbType="Int NOT NULL")]
		public int salesId
		{
			get
			{
				return this._salesId;
			}
			set
			{
				if ((this._salesId != value))
				{
					if (this._salesOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsalesIdChanging(value);
					this.SendPropertyChanging();
					this._salesId = value;
					this.SendPropertyChanged("salesId");
					this.OnsalesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="delivery_deliverySchedule", Storage="_deliverySchedules", ThisKey="deliveryId", OtherKey="deliveryId")]
		public EntitySet<deliverySchedule> deliverySchedules
		{
			get
			{
				return this._deliverySchedules;
			}
			set
			{
				this._deliverySchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="salesOrder_delivery", Storage="_salesOrder", ThisKey="salesId", OtherKey="salesId", IsForeignKey=true)]
		public salesOrder salesOrder
		{
			get
			{
				return this._salesOrder.Entity;
			}
			set
			{
				salesOrder previousValue = this._salesOrder.Entity;
				if (((previousValue != value) 
							|| (this._salesOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._salesOrder.Entity = null;
						previousValue.deliveries.Remove(this);
					}
					this._salesOrder.Entity = value;
					if ((value != null))
					{
						value.deliveries.Add(this);
						this._salesId = value.salesId;
					}
					else
					{
						this._salesId = default(int);
					}
					this.SendPropertyChanged("salesOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_deliverySchedules(deliverySchedule entity)
		{
			this.SendPropertyChanging();
			entity.delivery = this;
		}
		
		private void detach_deliverySchedules(deliverySchedule entity)
		{
			this.SendPropertyChanging();
			entity.delivery = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.deliverySchedule")]
	public partial class deliverySchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _deliveryId;
		
		private System.Guid _driverId;
		
		private System.DateTime _deliveryDate;
		
		private EntityRef<delivery> _delivery;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndeliveryIdChanging(int value);
    partial void OndeliveryIdChanged();
    partial void OndriverIdChanging(System.Guid value);
    partial void OndriverIdChanged();
    partial void OndeliveryDateChanging(System.DateTime value);
    partial void OndeliveryDateChanged();
    #endregion
		
		public deliverySchedule()
		{
			this._delivery = default(EntityRef<delivery>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deliveryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int deliveryId
		{
			get
			{
				return this._deliveryId;
			}
			set
			{
				if ((this._deliveryId != value))
				{
					if (this._delivery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndeliveryIdChanging(value);
					this.SendPropertyChanging();
					this._deliveryId = value;
					this.SendPropertyChanged("deliveryId");
					this.OndeliveryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driverId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid driverId
		{
			get
			{
				return this._driverId;
			}
			set
			{
				if ((this._driverId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndriverIdChanging(value);
					this.SendPropertyChanging();
					this._driverId = value;
					this.SendPropertyChanged("driverId");
					this.OndriverIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deliveryDate", DbType="DateTime NOT NULL")]
		public System.DateTime deliveryDate
		{
			get
			{
				return this._deliveryDate;
			}
			set
			{
				if ((this._deliveryDate != value))
				{
					this.OndeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._deliveryDate = value;
					this.SendPropertyChanged("deliveryDate");
					this.OndeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="delivery_deliverySchedule", Storage="_delivery", ThisKey="deliveryId", OtherKey="deliveryId", IsForeignKey=true)]
		public delivery delivery
		{
			get
			{
				return this._delivery.Entity;
			}
			set
			{
				delivery previousValue = this._delivery.Entity;
				if (((previousValue != value) 
							|| (this._delivery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._delivery.Entity = null;
						previousValue.deliverySchedules.Remove(this);
					}
					this._delivery.Entity = value;
					if ((value != null))
					{
						value.deliverySchedules.Add(this);
						this._deliveryId = value.deliveryId;
					}
					else
					{
						this._deliveryId = default(int);
					}
					this.SendPropertyChanged("delivery");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_deliverySchedule", Storage="_aspnet_User", ThisKey="driverId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.deliverySchedules.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.deliverySchedules.Add(this);
						this._driverId = value.UserId;
					}
					else
					{
						this._driverId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.feedback")]
	public partial class feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _feedbackId;
		
		private System.DateTime _feedbackDate;
		
		private string _feedbackContent;
		
		private string _feedbackStatus;
		
		private string _replyContent;
		
		private System.Guid _customer;
		
		private System.Nullable<System.Guid> _manager;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<aspnet_User> _aspnet_User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfeedbackIdChanging(int value);
    partial void OnfeedbackIdChanged();
    partial void OnfeedbackDateChanging(System.DateTime value);
    partial void OnfeedbackDateChanged();
    partial void OnfeedbackContentChanging(string value);
    partial void OnfeedbackContentChanged();
    partial void OnfeedbackStatusChanging(string value);
    partial void OnfeedbackStatusChanged();
    partial void OnreplyContentChanging(string value);
    partial void OnreplyContentChanged();
    partial void OncustomerChanging(System.Guid value);
    partial void OncustomerChanged();
    partial void OnmanagerChanging(System.Nullable<System.Guid> value);
    partial void OnmanagerChanged();
    #endregion
		
		public feedback()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._aspnet_User1 = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_feedbackId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int feedbackId
		{
			get
			{
				return this._feedbackId;
			}
			set
			{
				if ((this._feedbackId != value))
				{
					this.OnfeedbackIdChanging(value);
					this.SendPropertyChanging();
					this._feedbackId = value;
					this.SendPropertyChanged("feedbackId");
					this.OnfeedbackIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_feedbackDate", DbType="DateTime NOT NULL")]
		public System.DateTime feedbackDate
		{
			get
			{
				return this._feedbackDate;
			}
			set
			{
				if ((this._feedbackDate != value))
				{
					this.OnfeedbackDateChanging(value);
					this.SendPropertyChanging();
					this._feedbackDate = value;
					this.SendPropertyChanged("feedbackDate");
					this.OnfeedbackDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_feedbackContent", DbType="NVarChar(MAX)")]
		public string feedbackContent
		{
			get
			{
				return this._feedbackContent;
			}
			set
			{
				if ((this._feedbackContent != value))
				{
					this.OnfeedbackContentChanging(value);
					this.SendPropertyChanging();
					this._feedbackContent = value;
					this.SendPropertyChanged("feedbackContent");
					this.OnfeedbackContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_feedbackStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string feedbackStatus
		{
			get
			{
				return this._feedbackStatus;
			}
			set
			{
				if ((this._feedbackStatus != value))
				{
					this.OnfeedbackStatusChanging(value);
					this.SendPropertyChanging();
					this._feedbackStatus = value;
					this.SendPropertyChanged("feedbackStatus");
					this.OnfeedbackStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replyContent", DbType="NVarChar(MAX)")]
		public string replyContent
		{
			get
			{
				return this._replyContent;
			}
			set
			{
				if ((this._replyContent != value))
				{
					this.OnreplyContentChanging(value);
					this.SendPropertyChanging();
					this._replyContent = value;
					this.SendPropertyChanged("replyContent");
					this.OnreplyContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid customer
		{
			get
			{
				return this._customer;
			}
			set
			{
				if ((this._customer != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerChanging(value);
					this.SendPropertyChanging();
					this._customer = value;
					this.SendPropertyChanged("customer");
					this.OncustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manager", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> manager
		{
			get
			{
				return this._manager;
			}
			set
			{
				if ((this._manager != value))
				{
					if (this._aspnet_User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmanagerChanging(value);
					this.SendPropertyChanging();
					this._manager = value;
					this.SendPropertyChanged("manager");
					this.OnmanagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_feedback", Storage="_aspnet_User", ThisKey="customer", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.feedbacks.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.feedbacks.Add(this);
						this._customer = value.UserId;
					}
					else
					{
						this._customer = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_feedback1", Storage="_aspnet_User1", ThisKey="manager", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User1
		{
			get
			{
				return this._aspnet_User1.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User1.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User1.Entity = null;
						previousValue.feedbacks1.Remove(this);
					}
					this._aspnet_User1.Entity = value;
					if ((value != null))
					{
						value.feedbacks1.Add(this);
						this._manager = value.UserId;
					}
					else
					{
						this._manager = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.payment")]
	public partial class payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _paymentId;
		
		private string _paymentType;
		
		private string _paymentMethod;
		
		private decimal _paymentAmount;
		
		private System.DateTime _paymentDate;
		
		private int _salesId;
		
		private EntityRef<salesOrder> _salesOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpaymentIdChanging(int value);
    partial void OnpaymentIdChanged();
    partial void OnpaymentTypeChanging(string value);
    partial void OnpaymentTypeChanged();
    partial void OnpaymentMethodChanging(string value);
    partial void OnpaymentMethodChanged();
    partial void OnpaymentAmountChanging(decimal value);
    partial void OnpaymentAmountChanged();
    partial void OnpaymentDateChanging(System.DateTime value);
    partial void OnpaymentDateChanged();
    partial void OnsalesIdChanging(int value);
    partial void OnsalesIdChanged();
    #endregion
		
		public payment()
		{
			this._salesOrder = default(EntityRef<salesOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int paymentId
		{
			get
			{
				return this._paymentId;
			}
			set
			{
				if ((this._paymentId != value))
				{
					this.OnpaymentIdChanging(value);
					this.SendPropertyChanging();
					this._paymentId = value;
					this.SendPropertyChanged("paymentId");
					this.OnpaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string paymentType
		{
			get
			{
				return this._paymentType;
			}
			set
			{
				if ((this._paymentType != value))
				{
					this.OnpaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._paymentType = value;
					this.SendPropertyChanged("paymentType");
					this.OnpaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentMethod", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string paymentMethod
		{
			get
			{
				return this._paymentMethod;
			}
			set
			{
				if ((this._paymentMethod != value))
				{
					this.OnpaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._paymentMethod = value;
					this.SendPropertyChanged("paymentMethod");
					this.OnpaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentAmount", DbType="Money NOT NULL")]
		public decimal paymentAmount
		{
			get
			{
				return this._paymentAmount;
			}
			set
			{
				if ((this._paymentAmount != value))
				{
					this.OnpaymentAmountChanging(value);
					this.SendPropertyChanging();
					this._paymentAmount = value;
					this.SendPropertyChanged("paymentAmount");
					this.OnpaymentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentDate", DbType="DateTime NOT NULL")]
		public System.DateTime paymentDate
		{
			get
			{
				return this._paymentDate;
			}
			set
			{
				if ((this._paymentDate != value))
				{
					this.OnpaymentDateChanging(value);
					this.SendPropertyChanging();
					this._paymentDate = value;
					this.SendPropertyChanged("paymentDate");
					this.OnpaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salesId", DbType="Int NOT NULL")]
		public int salesId
		{
			get
			{
				return this._salesId;
			}
			set
			{
				if ((this._salesId != value))
				{
					if (this._salesOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsalesIdChanging(value);
					this.SendPropertyChanging();
					this._salesId = value;
					this.SendPropertyChanged("salesId");
					this.OnsalesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="salesOrder_payment", Storage="_salesOrder", ThisKey="salesId", OtherKey="salesId", IsForeignKey=true)]
		public salesOrder salesOrder
		{
			get
			{
				return this._salesOrder.Entity;
			}
			set
			{
				salesOrder previousValue = this._salesOrder.Entity;
				if (((previousValue != value) 
							|| (this._salesOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._salesOrder.Entity = null;
						previousValue.payments.Remove(this);
					}
					this._salesOrder.Entity = value;
					if ((value != null))
					{
						value.payments.Add(this);
						this._salesId = value.salesId;
					}
					else
					{
						this._salesId = default(int);
					}
					this.SendPropertyChanged("salesOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.salesItem")]
	public partial class salesItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _salesId;
		
		private int _productId;
		
		private int _quantity;
		
		private decimal _totalPrice;
		
		private decimal _unitPrice;
		
		private EntityRef<product> _product;
		
		private EntityRef<salesOrder> _salesOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsalesIdChanging(int value);
    partial void OnsalesIdChanged();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OntotalPriceChanging(decimal value);
    partial void OntotalPriceChanged();
    partial void OnunitPriceChanging(decimal value);
    partial void OnunitPriceChanged();
    #endregion
		
		public salesItem()
		{
			this._product = default(EntityRef<product>);
			this._salesOrder = default(EntityRef<salesOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salesId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int salesId
		{
			get
			{
				return this._salesId;
			}
			set
			{
				if ((this._salesId != value))
				{
					if (this._salesOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsalesIdChanging(value);
					this.SendPropertyChanging();
					this._salesId = value;
					this.SendPropertyChanged("salesId");
					this.OnsalesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalPrice", DbType="Money NOT NULL")]
		public decimal totalPrice
		{
			get
			{
				return this._totalPrice;
			}
			set
			{
				if ((this._totalPrice != value))
				{
					this.OntotalPriceChanging(value);
					this.SendPropertyChanging();
					this._totalPrice = value;
					this.SendPropertyChanged("totalPrice");
					this.OntotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitPrice", DbType="Money NOT NULL")]
		public decimal unitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				if ((this._unitPrice != value))
				{
					this.OnunitPriceChanging(value);
					this.SendPropertyChanging();
					this._unitPrice = value;
					this.SendPropertyChanged("unitPrice");
					this.OnunitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_salesItem", Storage="_product", ThisKey="productId", OtherKey="productId", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.salesItems.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.salesItems.Add(this);
						this._productId = value.productId;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="salesOrder_salesItem", Storage="_salesOrder", ThisKey="salesId", OtherKey="salesId", IsForeignKey=true)]
		public salesOrder salesOrder
		{
			get
			{
				return this._salesOrder.Entity;
			}
			set
			{
				salesOrder previousValue = this._salesOrder.Entity;
				if (((previousValue != value) 
							|| (this._salesOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._salesOrder.Entity = null;
						previousValue.salesItems.Remove(this);
					}
					this._salesOrder.Entity = value;
					if ((value != null))
					{
						value.salesItems.Add(this);
						this._salesId = value.salesId;
					}
					else
					{
						this._salesId = default(int);
					}
					this.SendPropertyChanged("salesOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.salesOrder")]
	public partial class salesOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _salesId;
		
		private System.DateTime _salesDate;
		
		private string _salesType;
		
		private decimal _totalAmount;
		
		private string _salesStatus;
		
		private System.Nullable<System.Guid> _customer;
		
		private System.Nullable<System.Guid> _staff;
		
		private EntitySet<returnInward> _returnInwards;
		
		private EntitySet<delivery> _deliveries;
		
		private EntitySet<payment> _payments;
		
		private EntitySet<salesItem> _salesItems;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<aspnet_User> _aspnet_User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsalesIdChanging(int value);
    partial void OnsalesIdChanged();
    partial void OnsalesDateChanging(System.DateTime value);
    partial void OnsalesDateChanged();
    partial void OnsalesTypeChanging(string value);
    partial void OnsalesTypeChanged();
    partial void OntotalAmountChanging(decimal value);
    partial void OntotalAmountChanged();
    partial void OnsalesStatusChanging(string value);
    partial void OnsalesStatusChanged();
    partial void OncustomerChanging(System.Nullable<System.Guid> value);
    partial void OncustomerChanged();
    partial void OnstaffChanging(System.Nullable<System.Guid> value);
    partial void OnstaffChanged();
    #endregion
		
		public salesOrder()
		{
			this._returnInwards = new EntitySet<returnInward>(new Action<returnInward>(this.attach_returnInwards), new Action<returnInward>(this.detach_returnInwards));
			this._deliveries = new EntitySet<delivery>(new Action<delivery>(this.attach_deliveries), new Action<delivery>(this.detach_deliveries));
			this._payments = new EntitySet<payment>(new Action<payment>(this.attach_payments), new Action<payment>(this.detach_payments));
			this._salesItems = new EntitySet<salesItem>(new Action<salesItem>(this.attach_salesItems), new Action<salesItem>(this.detach_salesItems));
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._aspnet_User1 = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salesId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int salesId
		{
			get
			{
				return this._salesId;
			}
			set
			{
				if ((this._salesId != value))
				{
					this.OnsalesIdChanging(value);
					this.SendPropertyChanging();
					this._salesId = value;
					this.SendPropertyChanged("salesId");
					this.OnsalesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salesDate", DbType="DateTime NOT NULL")]
		public System.DateTime salesDate
		{
			get
			{
				return this._salesDate;
			}
			set
			{
				if ((this._salesDate != value))
				{
					this.OnsalesDateChanging(value);
					this.SendPropertyChanging();
					this._salesDate = value;
					this.SendPropertyChanged("salesDate");
					this.OnsalesDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salesType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string salesType
		{
			get
			{
				return this._salesType;
			}
			set
			{
				if ((this._salesType != value))
				{
					this.OnsalesTypeChanging(value);
					this.SendPropertyChanging();
					this._salesType = value;
					this.SendPropertyChanged("salesType");
					this.OnsalesTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalAmount", DbType="Money NOT NULL")]
		public decimal totalAmount
		{
			get
			{
				return this._totalAmount;
			}
			set
			{
				if ((this._totalAmount != value))
				{
					this.OntotalAmountChanging(value);
					this.SendPropertyChanging();
					this._totalAmount = value;
					this.SendPropertyChanged("totalAmount");
					this.OntotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salesStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string salesStatus
		{
			get
			{
				return this._salesStatus;
			}
			set
			{
				if ((this._salesStatus != value))
				{
					this.OnsalesStatusChanging(value);
					this.SendPropertyChanging();
					this._salesStatus = value;
					this.SendPropertyChanged("salesStatus");
					this.OnsalesStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> customer
		{
			get
			{
				return this._customer;
			}
			set
			{
				if ((this._customer != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerChanging(value);
					this.SendPropertyChanging();
					this._customer = value;
					this.SendPropertyChanged("customer");
					this.OncustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> staff
		{
			get
			{
				return this._staff;
			}
			set
			{
				if ((this._staff != value))
				{
					if (this._aspnet_User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstaffChanging(value);
					this.SendPropertyChanging();
					this._staff = value;
					this.SendPropertyChanged("staff");
					this.OnstaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="salesOrder_returnInward", Storage="_returnInwards", ThisKey="salesId", OtherKey="salesId")]
		public EntitySet<returnInward> returnInwards
		{
			get
			{
				return this._returnInwards;
			}
			set
			{
				this._returnInwards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="salesOrder_delivery", Storage="_deliveries", ThisKey="salesId", OtherKey="salesId")]
		public EntitySet<delivery> deliveries
		{
			get
			{
				return this._deliveries;
			}
			set
			{
				this._deliveries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="salesOrder_payment", Storage="_payments", ThisKey="salesId", OtherKey="salesId")]
		public EntitySet<payment> payments
		{
			get
			{
				return this._payments;
			}
			set
			{
				this._payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="salesOrder_salesItem", Storage="_salesItems", ThisKey="salesId", OtherKey="salesId")]
		public EntitySet<salesItem> salesItems
		{
			get
			{
				return this._salesItems;
			}
			set
			{
				this._salesItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_salesOrder", Storage="_aspnet_User", ThisKey="customer", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.salesOrders.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.salesOrders.Add(this);
						this._customer = value.UserId;
					}
					else
					{
						this._customer = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_salesOrder1", Storage="_aspnet_User1", ThisKey="staff", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User1
		{
			get
			{
				return this._aspnet_User1.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User1.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User1.Entity = null;
						previousValue.salesOrders1.Remove(this);
					}
					this._aspnet_User1.Entity = value;
					if ((value != null))
					{
						value.salesOrders1.Add(this);
						this._staff = value.UserId;
					}
					else
					{
						this._staff = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_returnInwards(returnInward entity)
		{
			this.SendPropertyChanging();
			entity.salesOrder = this;
		}
		
		private void detach_returnInwards(returnInward entity)
		{
			this.SendPropertyChanging();
			entity.salesOrder = null;
		}
		
		private void attach_deliveries(delivery entity)
		{
			this.SendPropertyChanging();
			entity.salesOrder = this;
		}
		
		private void detach_deliveries(delivery entity)
		{
			this.SendPropertyChanging();
			entity.salesOrder = null;
		}
		
		private void attach_payments(payment entity)
		{
			this.SendPropertyChanging();
			entity.salesOrder = this;
		}
		
		private void detach_payments(payment entity)
		{
			this.SendPropertyChanging();
			entity.salesOrder = null;
		}
		
		private void attach_salesItems(salesItem entity)
		{
			this.SendPropertyChanging();
			entity.salesOrder = this;
		}
		
		private void detach_salesItems(salesItem entity)
		{
			this.SendPropertyChanging();
			entity.salesOrder = null;
		}
	}
}
#pragma warning restore 1591
